------ cal_detour ------
    --- (1) bib dijkstra method ---
        length: 40
        path: [46, 48, 49, 50, 52, 62, 61, 60]
        S: [1, 2, 7, 15, 21, 34, 35, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 62, 69, 72, 74, 75, 79, 90, 91, 92, 93, 95, 96, 97]
        T: [1, 2, 4, 6, 12, 14, 15, 16, 17, 23, 26, 27, 28, 29, 30, 31, 33, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 70, 76, 77, 78, 82, 85, 88, 95, 99]
        F: [(1, 59), (1, 99), (2, 12), (15, 17), (21, 26), (34, 33), (34, 99), (44, 14), (62, 61), (69, 70), (74, 29), (74, 76), (90, 88), (91, 26), (93, 76), (96, 55), (97, 29)]
        U: [12, 14, 17, 26, 29, 33, 55, 59, 61, 70, 76, 88, 99]
    --- (2) make Hmid ---
    --- (3) process about Gs ---
    --- (4) process about Gt---
    --- (5) make Hs & Ht ---
    --- (6) make PathGraph ---
    --- (7) find k-path ---
        464850215960: 43
        46485021215960: 49
        464850251215960: 49
        464850219915960: 49
        46485051215960: 46
        464850521552626160: 48
    --- (8) make Gd ---
    --- (9) calculate overlap ---
        [46, 48, 50, 2, 1, 59, 60]: 6.0
        [46, 48, 50, 2, 1, 2, 1, 59, 60]: 6.0
        [46, 48, 50, 2, 51, 2, 1, 59, 60]: 6.0
        [46, 48, 50, 2, 1, 99, 1, 59, 60]: 6.0
        [46, 48, 50, 51, 2, 1, 59, 60]: 6.0
        [46, 48, 50, 52, 15, 52, 62, 61, 60]: 35.0
    --- (10) check cycle ---
    --- (11) check detour ---
        [46, 48, 50, 2, 1, 59, 60]: 6.0 (detour)
        [46, 48, 50, 2, 1, 2, 1, 59, 60]: 6.0 (detour)
        [46, 48, 50, 2, 51, 2, 1, 59, 60]: 6.0 (detour)
        [46, 48, 50, 2, 1, 99, 1, 59, 60]: 6.0 (detour)
        [46, 48, 50, 51, 2, 1, 59, 60]: 6.0 (detour)
        [46, 48, 50, 52, 15, 52, 62, 61, 60]: 35.0
    --- (12) output ---
        [46, 48, 49, 50, 52, 62, 61, 60]: 40
        [46, 48, 50, 2, 1, 59, 60]: 43
        [46, 48, 50, 51, 2, 1, 59, 60]: 46
------ end cal_detour ------

------ cal_centrality ------
    [46, 48, 49, 50, 52, 62, 61, 60]: (len: 40, RPscore: 0.1282507350863017)
    [46, 48, 50, 2, 1, 59, 60]: (len: 43, RPscore: 0.1534269615630961)
    [46, 48, 50, 51, 2, 1, 59, 60]: (len: 46, RPscore: 0.1299215973055185)

    46 {'type': 'src'}
    48 {'type': 'between', 'Cbet': 1.0, 'critical_node': True, 'C_without_normalize': 0.4115992939549163, 'C': [1.0, None]}
    49 {'type': 'between', 'Cbet': 0.3333333333333333, 'critical_node': False, 'C_without_normalize': 0.04275024502876723, 'C': [0.1038637472333706, 0.2263126652177011]}
    50 {'type': 'between', 'Cbet': 1.0, 'critical_node': True, 'C_without_normalize': 0.4115992939549163, 'C': [1.0, None]}
    52 {'type': 'between', 'Cbet': 0.3333333333333333, 'critical_node': False, 'C_without_normalize': 0.04275024502876723, 'C': [0.1038637472333706, 0.2263126652177011]}
    62 {'type': 'between', 'Cbet': 0.3333333333333333, 'critical_node': False, 'C_without_normalize': 0.04275024502876723, 'C': [0.1038637472333706, 0.2263126652177011]}
    61 {'type': 'between', 'Cbet': 0.3333333333333333, 'critical_node': False, 'C_without_normalize': 0.04275024502876723, 'C': [0.1038637472333706, 0.2263126652177011]}
    60 {'type': 'dst'}
    2 {'type': 'between', 'Cbet': 0.6666666666666666, 'critical_node': False, 'C_without_normalize': 0.18889903924574306, 'C': [0.4589391721999254, 1.0]}
    1 {'type': 'between', 'Cbet': 0.6666666666666666, 'critical_node': False, 'C_without_normalize': 0.18889903924574306, 'C': [0.4589391721999254, 1.0]}
    59 {'type': 'between', 'Cbet': 0.6666666666666666, 'critical_node': False, 'C_without_normalize': 0.18889903924574306, 'C': [0.4589391721999254, 1.0]}
    51 {'type': 'between', 'Cbet': 0.3333333333333333, 'critical_node': False, 'C_without_normalize': 0.0433071991018395, 'C': [0.10521689356100564, 0.22926108716466356]}
------ end cal_centrality ------

